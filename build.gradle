apply plugin: 'java'
apply plugin: 'eclipse'

configurations {
    hibernatetool
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.0-api', version: '1.0.1.Final'
    
    runtime group: 'org.hibernate', name: 'hibernate-entitymanager', version: '4.1.4.Final'
    runtime group: 'com.h2database', name: 'h2', version: '1.3.167'
    
    hibernatetool group: 'org.hibernate', name: 'hibernate-tools', version: '3.2.4.GA'
    hibernatetool group: 'org.hibernate', name: 'hibernate-entitymanager', version: '3.6.10.Final'
    hibernatetool group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.6'
    hibernatetool group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.6.6'
}

eclipse {
    classpath {
        defaultOutputDir = new File(project.buildDir, 'eclipse')
    }
}

def persistenceUnit = "com.timgroup.jpa"

File entitySqlFile = new File(project.buildDir, "sql/${persistenceUnit}.sql")

task generateSql(dependsOn: classes) << {
    // here be cargo cult programming
    ant.taskdef(name: 'hibernatetool',
        classname: 'org.hibernate.tool.ant.HibernateToolTask',
        classpath: configurations.hibernatetool.asPath
        )
    entitySqlFile.parentFile.mkdirs()
    ant.hibernatetool(destdir: entitySqlFile.parentFile) {
        jpaconfiguration(persistenceunit: persistenceUnit)
        hbm2ddl(export: false, outputfilename: entitySqlFile.name, format: true)
        classpath { pathelement( path: sourceSets.main.output.asPath ) }
    }
}

def dbUrl = "jdbc:h2:build/db/${persistenceUnit}"
def dbDriver = 'org.h2.Driver'

task applySql(dependsOn: generateSql) << {
    // this is needed to get the H2 driver onto the Groovy classpath - and it has to be the Groovy classpath, not the build script one
    URLClassLoader loader = GroovyObject.class.classLoader
    configurations.runtime.each {File file ->
        loader.addURL(file.toURI().toURL())
    }
    def sql = groovy.sql.Sql.newInstance(dbUrl, null, null, dbDriver)
    sql.execute(entitySqlFile.text)
}
